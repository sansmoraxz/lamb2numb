name: Layer Deployment pipeline 

permissions:
  id-token: write
  contents: read
  actions: read

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/**'

jobs:
  deployment:
    name: Deployment layer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-lambda-layer-${{ github.event.repository.name }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install dependencies
        run: poetry install --no-dev

      - name: Zip dependencies
        run: |
          poetry run pip install -r <(poetry export -f requirements.txt --without-hashes) -t python
          zip -r lambda.zip python
      - name: Upload zip to S3
        run: aws s3 cp lambda.zip s3://${{ secrets.AWS_BUCKET }}/${{ github.event.repository.name }}-${{ github.sha }}.zip
      - name: Deploy layer for AWS Lambda
        env:
          AWS_BUCKET: aedp-lambda-layer-eu-west-3
        run: aws lambda publish-layer-version
                --layer-name "${{ github.event.repository.name }}-layer"
                --description "Layer for ${{ github.event.repository.name }}"
                --content "S3Bucket=${{ secrets.AWS_BUCKET }},S3Key=${{ github.event.repository.name }}-${{ github.sha }}.zip"
                --compatible-runtimes "python3.10"
                --compatible-architectures "x86_64"
